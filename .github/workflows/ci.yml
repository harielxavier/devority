name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: devority_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run type check
      run: npm run type-check
    
    - name: Run linting
      run: npm run lint
    
    - name: Setup test database
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/devority_test
      run: |
        npm run db:push
    
    - name: Run tests
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/devority_test
        NEXTAUTH_SECRET: test-secret-key-for-ci-cd-pipeline-testing
        RESEND_API_KEY: test-key
        RESEND_FROM_EMAIL: test@example.com
      run: npm run test:run

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      env:
        NEXTAUTH_SECRET: test-secret-key-for-ci-cd-pipeline-testing
        RESEND_API_KEY: test-key
        RESEND_FROM_EMAIL: test@example.com
        NEXT_PUBLIC_APP_URL: https://devority.io
      run: npm run build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: .next/

  security-audit:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run security audit
      run: npm audit --audit-level moderate
      continue-on-error: true
    
    - name: Check for vulnerabilities
      run: |
        if npm audit --audit-level high --json | jq '.vulnerabilities | length > 0'; then
          echo "High severity vulnerabilities found!"
          npm audit --audit-level high
          exit 1
        fi
